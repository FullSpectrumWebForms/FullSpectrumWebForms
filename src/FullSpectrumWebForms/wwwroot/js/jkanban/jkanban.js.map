{"version":3,"file":"jkanban.js","sourceRoot":"","sources":["jkanban.ts"],"names":[],"mappings":"","sourcesContent":["\r\ndeclare interface jKanbanOptions {\r\n    element: string | JQuery,                                           // selector of the kanban container\r\n    gutter?: string,                                       // gutter of the board\r\n    widthBoard?: string,                                      // width of the board\r\n    boards: jKanbanBoard[];                                           // json of boards\r\n    dragBoards?: boolean,                                         // the boards are draggable, if false only item can be dragged\r\n    addItemButton?: boolean,                                        // add a button to board for easy item creation\r\n    buttonContent?: string,                                          // text or html content of the board button\r\n    click?: (el: HTMLElement) => void;                             // callback when any board's item are clicked\r\n    dragEl?: (el: HTMLElement, source: any) => void;                     // callback when any board's item are dragged\r\n    dragendEl?: (el: HTMLElement) => void;                             // callback when any board's item stop drag\r\n    dropEl?: (el: HTMLElement, target: any, source: any, sibling: any) => void;    // callback when any board's item drop in a board\r\n    dragBoard?: (el: HTMLElement, source: any) => void,                     // callback when any board stop drag\r\n    dragendBoard?: (el: HTMLElement) => void,                             // callback when any board stop drag\r\n    buttonClick?: (el: HTMLElement, boardId: string) => void                      // callback when the board's button is clicked\r\n}\r\ndeclare interface jKanbanItem {\r\n    id: string;\r\n    title: string;\r\n}\r\ndeclare interface jKanbanBoard {\r\n    id: string;\r\n    title: string;\r\n    class: string;\r\n    dragTo?: string[];\r\n    item: jKanbanItem[];\r\n}\r\ndeclare class jKanban {\r\n\r\n    constructor(options: jKanbanOptions);\r\n\r\n    addElement(boardId: string, element: jKanbanItem); //Add element in the board with ID boardID, element is the standard format\r\n    addBoards(boards: jKanbanBoard[]);\r\n\r\n    findElement(id: string): jKanbanItem;\r\n    findBoard(id: string): jKanbanBoard; // Find board by id\r\n    getBoardElements(): jKanbanBoard[]; // \tGet all item of a board\r\n    removeElement(id: string); // Remove a board's element by id\r\n    removeBoard(id: string); // Remove a board by id\r\n}"]}