{"version":3,"file":"fullCalendar.js","sourceRoot":"","sources":["fullCalendar.ts"],"names":[],"mappings":"AAAA,0CAA0C;AAC1C,2CAA2C;AAC3C,gHAAgH;AAChH,kEAAkE","sourcesContent":["// Type definitions for FullCalendar 1.6.1\r\n// Project: http://arshaw.com/fullcalendar/\r\n// Definitions by: Neil Stalker <https://github.com/nestalk>, Marcelo Camargo <https://github.com/hasellcamargo>\r\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\r\n\r\ndeclare namespace FullCalendar {\r\n    export interface Calendar {\r\n\r\n        /**\r\n         * Formats a Date object into a string.\r\n         */\r\n        formatDate(date: Date, format: string, options?: Options): string;\r\n\r\n        /**\r\n         * Formats a date range (two Date objects) into a string.\r\n         */\r\n        formatDates(date1: Date, date2: Date, format: string, options?: Options): string;\r\n\r\n        /**\r\n         * Parses a string into a Date object.\r\n         */\r\n        parseDate(dateString: string, ignoreTimezone?: boolean): Date;\r\n\r\n        /**\r\n         * Parses an ISO8601 string into a Date object.\r\n         */\r\n        parseISO8601(dateString: string, ignoreTimezone?: boolean): Date;\r\n\r\n        /**\r\n         * Gets the version of Fullcalendar\r\n         */\r\n        version: string;\r\n    }\r\n\r\n    export interface BusinessHours {\r\n        start: moment.Duration;\r\n        end: moment.Duration;\r\n        dow: Array<number>;\r\n    }\r\n\r\n    export interface Timespan {\r\n        start: moment.Moment;\r\n        end: moment.Moment;\r\n    }\r\n\r\n    export interface Options extends AgendaOptions, EventDraggingResizingOptions, DroppingExternalElementsOptions, SelectionOptions {\r\n\r\n        // General display - http://arshaw.com/fullcalendar/docs/display/\r\n        schedulerLicenseKey?: string;\r\n        header?: {\r\n            left: string;\r\n            center: string;\r\n            right: string;\r\n        }\r\n        footer?: {\r\n            left: string;\r\n            center: string;\r\n            right: string;\r\n        }\r\n        theme?: boolean\r\n        buttonIcons?: {\r\n            prev: string;\r\n            next: string;\r\n        }\r\n        resources?: any[];\r\n        resourceColumns?: any[];\r\n        firstDay?: number;\r\n        isRTL?: boolean;\r\n        weekends?: boolean;\r\n        hiddenDays?: number[];\r\n        weekMode?: string;\r\n        weekNumbers?: boolean;\r\n        weekNumberCalculation?: any; // String/Function\r\n        businessHours?: boolean | BusinessHours;\r\n        height?: number;\r\n        contentHeight?: number;\r\n        aspectRatio?: number;\r\n        handleWindowResize?: boolean;\r\n        viewRender?: (view: ViewObject, element: JQuery) => void;\r\n        viewDestroy?: (view: ViewObject, element: JQuery) => void;\r\n        dayRender?: (date: Date, cell: HTMLTableDataCellElement) => void;\r\n        windowResize?: (view: ViewObject) => void;\r\n        eventLimit?: boolean;\r\n        // Timezone\r\n        timezone?: string | boolean;\r\n        now?: moment.Moment | Date | string | (() => moment.Moment)\r\n        views?: { [name: string]: any };\r\n        // Views - http://arshaw.com/fullcalendar/docs/views/\r\n\r\n        defaultView?: string;\r\n\r\n        // Current Date - http://arshaw.com/fullcalendar/docs/current_date/\r\n\r\n        defaultDate?: moment.Moment | Date | string;\r\n        year?: number;\r\n        month?: number;\r\n        date?: number;\r\n\r\n        navLinkDayClick?: any;\r\n        navLinks?: boolean;\r\n\r\n        // Text/Time Customization - http://arshaw.com/fullcalendar/docs/text/\r\n\r\n        timeFormat?: any; // String/ViewOptionHash\r\n        columnFormat?: any; // String/ViewOptionHash\r\n        titleFormat?: any; // String/ViewOptionHash\r\n\r\n        buttonText?: ButtonTextObject;\r\n        monthNames?: Array<string>;\r\n        monthNamesShort?: Array<string>;\r\n        dayNames?: Array<string>;\r\n        dayNamesShort?: Array<string>;\r\n        weekNumberTitle?: string;\r\n        resourceGroupField?: string;\r\n        resourceAreaWidth?: string;\r\n\r\n        // Clicking & Hovering - http://arshaw.com/fullcalendar/docs/mouse/\r\n\r\n        dayClick?: (date: Date, allDay: boolean, jsEvent: MouseEvent, view: ViewObject) => void;\r\n        eventClick?: (event: EventObject, jsEvent: MouseEvent, view: ViewObject) => any; // return type boolean or void\r\n        eventMouseover?: (event: EventObject, jsEvent: MouseEvent, view: ViewObject) => void;\r\n        eventMouseout?: (event: EventObject, jsEvent: MouseEvent, view: ViewObject) => void;\r\n\r\n        locale?: string;\r\n        displayEventTime?: boolean;\r\n        // Event Data - http://arshaw.com/fullcalendar/docs/event_data/\r\n\r\n        /**\r\n         * This has one of the following types:\r\n         *\r\n         * - EventObject[]\r\n         * - string (JSON feed)\r\n         * - (start: Date | string, end: Date | string, callback: {(events: EventObject[]) => void;}) => void;\r\n         */\r\n        events?: any;\r\n\r\n        /**\r\n         * An array, each element being one of the following types:\r\n         *\r\n         * - EventSource\r\n         * - EventObject[]\r\n         * - string (JSON feed)\r\n         * - (start: Date | string, end: Date | string, callback: {(events: EventObject[]) => void;}) => void;\r\n         */\r\n        eventSources?: any[];\r\n\r\n        allDayDefault?: boolean;\r\n        ignoreTimezone?: boolean;\r\n        startParam?: string;\r\n        endParam?: string\r\n        lazyFetching?: boolean;\r\n        eventDataTransform?: (eventData: any) => EventObject;\r\n        loading?: (isLoading: boolean, view: ViewObject) => void;\r\n\r\n        // Event Rendering - http://arshaw.com/fullcalendar/docs/event_rendering/\r\n\r\n        eventColor?: string;\r\n        eventBackgroundColor?: string;\r\n        eventBorderColor?: string;\r\n        eventTextColor?: string;\r\n        eventRender?: (event: EventObject, element: HTMLDivElement, view: ViewObject) => void;\r\n        eventAfterRender?: (event: EventObject, element: HTMLDivElement, view: ViewObject) => void;\r\n        eventAfterAllRender?: (view: ViewObject) => void;\r\n        eventDestroy?: (event: EventObject, element: JQuery, view: ViewObject) => void;\r\n\r\n\r\n    }\r\n\r\n    export interface ViewOptionHash {\r\n        month?: any;\r\n        week?: any;\r\n        day?: any;\r\n        agenda?: any;\r\n        agendaDay?: any;\r\n        agendaWeek?: any;\r\n        basic?: any;\r\n        basicDay?: any;\r\n        basicWeek?: any;\r\n        ''?: any;\r\n    }\r\n\r\n    /**\r\n     * Agenda Options - http://arshaw.com/fullcalendar/docs/agenda/\r\n     */\r\n    export interface AgendaOptions {\r\n        allDaySlot?: boolean;\r\n        allDayText?: string;\r\n        slotDuration?: moment.Duration;\r\n        slotLabelFormat?: string;\r\n        slotLabelInterval?: moment.Duration;\r\n        snapDuration?: moment.Duration;\r\n        scrollTime?: moment.Duration;\r\n        minTime?: moment.Duration; // Integer/String\r\n        maxTime?: moment.Duration; // Integer/String\r\n        slotEventOverlap?: boolean;\r\n    }\r\n\r\n    /*\r\n    * Event Dragging & Resizing\r\n    */\r\n    export interface EventDraggingResizingOptions {\r\n        editable?: boolean;\r\n        eventStartEditable?: boolean;\r\n        eventDurationEditable?: boolean;\r\n        dragRevertDuration?: number; // integer, milliseconds\r\n        dragOpacity?: number; // float\r\n        dragScroll?: boolean;\r\n        eventOverlap?: boolean | ((stillEvent: EventObject, movingEvent: EventObject) => boolean);\r\n        eventConstraint?: BusinessHours | Timespan;\r\n        eventDragStart?: (event: EventObject, jsEvent: MouseEvent, ui: any, view: ViewObject) => void;\r\n        eventDragStop?: (event: EventObject, jsEvent: MouseEvent, ui: any, view: ViewObject) => void;\r\n        eventDrop?: (event: EventObject, delta: moment.Duration, revertFunc: Function, jsEvent: Event, ui: any, view: ViewObject) => void;\r\n        eventResizeStart?: (event: EventObject, jsEvent: MouseEvent, ui: any, view: ViewObject) => void;\r\n        eventResizeStop?: (event: EventObject, jsEvent: MouseEvent, ui: any, view: ViewObject) => void;\r\n        eventResize?: (event: EventObject, delta: moment.Duration, revertFunc: Function, jsEvent: Event, ui: any, view: ViewObject) => void;\r\n    }\r\n    /*\r\n    * Selection - http://arshaw.com/fullcalendar/docs/selection/\r\n    */\r\n    export interface SelectionOptions {\r\n        selectable?: boolean;\r\n        selectHelper?: boolean | ((start: moment.Moment, end: moment.Moment) => HTMLElement);\r\n        unselectAuto?: boolean;\r\n        unselectCancel?: string;\r\n        selectOverlap?: boolean | ((event: EventObject) => boolean);\r\n        selectConstraint?: Timespan | BusinessHours;\r\n        select?: (start: moment.Moment, end: moment.Moment, jsEvent: MouseEvent, view: ViewObject, resource?: any) => void;\r\n        unselect?: (view: ViewObject, jsEvent: Event) => void;\r\n    }\r\n\r\n    export interface DroppingExternalElementsOptions {\r\n        droppable?: boolean;\r\n        dropAccept?: string | ((draggable: any) => boolean);\r\n        drop?: (date: moment.Moment, jsEvent: MouseEvent, ui: any) => void;\r\n        eventReceive?: (event: EventObject) => void\r\n    }\r\n\r\n    export interface ButtonTextObject {\r\n        prev?: string;\r\n        next?: string;\r\n        prevYear?: string;\r\n        nextYear?: string;\r\n        today?: string;\r\n        month?: string;\r\n        week?: string;\r\n        day?: string;\r\n    }\r\n\r\n    export interface EventObject extends Timespan {\r\n        id?: any // String/number\r\n        title: string;\r\n        allDay?: boolean;\r\n        url?: string;\r\n        className?: any; // string/Array<string>\r\n        editable?: boolean;\r\n        source?: EventSource;\r\n        color?: string;\r\n        backgroundColor?: string;\r\n        borderColor?: string;\r\n        textColor?: string;\r\n        rendering?: string;\r\n        resourceId?: string;\r\n    }\r\n\r\n    export interface ViewObject extends Timespan {\r\n        name: string;\r\n        title: string;\r\n        intervalStart: moment.Moment;\r\n        intervalEnd: moment.Moment;\r\n    }\r\n\r\n    export interface EventSource extends JQueryAjaxSettings {\r\n\r\n        /**\r\n         * This has one of the following types:\r\n         *\r\n         * - EventObject[]\r\n         * - string (JSON feed)\r\n         * - (start: Date | string, end: Date | string, callback: {(events: EventObject[]) => void;}) => void;\r\n         */\r\n        events?: any;\r\n\r\n        color?: string;\r\n        backgroundColor?: string;\r\n        borderColor?: string;\r\n        textColor?: string;\r\n        className?: any; // string/Array<string>\r\n        editable?: boolean;\r\n        allDayDefault?: boolean;\r\n        ignoreTimezone?: boolean;\r\n        eventTransform?: any;\r\n        startParam?: string;\r\n        endParam?: string\r\n    }\r\n\r\n}\r\n\r\ninterface JQuery {\r\n\r\n    /**\r\n     * Get/Set option value\r\n     */\r\n    fullCalendar(method: 'option', option: string, value?: any): void;\r\n    fullCalendar(method: 'option', option: FullCalendar.Options): void;\r\n\r\n    /**\r\n     * Immediately forces the calendar to render and/or readjusts its size.\r\n     */\r\n    fullCalendar(method: 'render'): void;\r\n\r\n    fullCalendar(method: 'refetchResources'): void;\r\n\r\n    /**\r\n     * Restores the element to the state before FullCalendar was initialized.\r\n     */\r\n    fullCalendar(method: 'destroy'): void;\r\n\r\n    /**\r\n     * Returns the View Object for the current view.\r\n     */\r\n    fullCalendar(method: 'getView'): FullCalendar.ViewObject;\r\n\r\n    /**\r\n     * Immediately switches to a different view.\r\n     */\r\n    fullCalendar(method: 'changeView', viewName: string): void;\r\n\r\n    /**\r\n     * Moves the calendar one step back (either by a month, week, or day).\r\n     */\r\n    fullCalendar(method: 'prev'): void;\r\n\r\n    /**\r\n     * Moves the calendar one step forward (either by a month, week, or day).\r\n     */\r\n    fullCalendar(method: 'next'): void;\r\n\r\n    /**\r\n     * Moves the calendar back one year.\r\n     */\r\n    fullCalendar(method: 'prevYear'): void;\r\n\r\n    /**\r\n     * Moves the calendar forward one year.\r\n     */\r\n    fullCalendar(method: 'nextYear'): void;\r\n\r\n    /**\r\n     * Moves the calendar to the current date.\r\n     */\r\n    fullCalendar(method: 'today'): void;\r\n\r\n    /**\r\n     * Moves the calendar to an arbitrary year/month/date.\r\n     */\r\n    fullCalendar(method: 'gotoDate', year: number, month?: number, date?: number): void;\r\n\r\n    /**\r\n     * Moves the calendar to an arbitrary date.\r\n     */\r\n    fullCalendar(method: 'gotoDate', date: Date | string): void;\r\n\r\n    /**\r\n     * Moves the calendar forward/backward an arbitrary amount of time.\r\n     */\r\n    fullCalendar(method: 'incrementDate', year: number, month?: number, date?: number): void;\r\n\r\n    /**\r\n     * Returns a Date object for the current date of the calendar.\r\n     */\r\n    fullCalendar(method: 'getDate'): Date;\r\n\r\n    /**\r\n     * A method for programmatically selecting a period of time.\r\n     */\r\n    fullCalendar(method: 'select', startDate: Date, endDate: Date, allDay: boolean): void;\r\n\r\n    /**\r\n     * A method for programmatically clearing the current selection.\r\n     */\r\n    fullCalendar(method: 'unselect'): void;\r\n\r\n    /**\r\n     * Reports changes to an event and renders them on the calendar.\r\n     */\r\n    fullCalendar(method: 'updateEvent', event: FullCalendar.EventObject): void;\r\n\r\n    /**\r\n     * Retrieves events that FullCalendar has in memory.\r\n     */\r\n    fullCalendar(method: 'clientEvents', idOrfilter?: any): Array<FullCalendar.EventObject>;\r\n\r\n    /**\r\n     * Retrieves events that FullCalendar has in memory.\r\n     */\r\n    fullCalendar(method: 'clientEvents', idOrfilter?: (e: FullCalendar.EventObject) => boolean): Array<FullCalendar.EventObject>;\r\n\r\n    /**\r\n     * Removes events from the calendar.\r\n     */\r\n    fullCalendar(method: 'removeEvents', idOrfilter?: any): void;\r\n\r\n    /**\r\n     * Removes events from the calendar.\r\n     */\r\n    fullCalendar(method: 'removeEvents', idOrfilter?: (e: FullCalendar.EventObject) => boolean): void;\r\n\r\n    /**\r\n     * Refetches events from all sources and rerenders them on the screen.\r\n     */\r\n    fullCalendar(method: 'refetchEvents'): void;\r\n\r\n    /**\r\n     * Dynamically adds an event source.\r\n     */\r\n    fullCalendar(method: 'addEventSource', source: any): void;\r\n\r\n    /**\r\n     * Dynamically removes an event source.\r\n     */\r\n    fullCalendar(method: 'removeEventSource', source: any): void;\r\n\r\n    /**\r\n     * Renders a new event on the calendar.\r\n     */\r\n    fullCalendar(method: 'renderEvent', event: FullCalendar.EventObject, stick?: boolean): void;\r\n\r\n    /**\r\n     * Rerenders all events on the calendar.\r\n     */\r\n    fullCalendar(method: 'rerenderEvents'): void;\r\n\r\n    /**\r\n     * Create calendar object\r\n     */\r\n    fullCalendar(options: FullCalendar.Options): JQuery;\r\n\r\n    /**\r\n     * Generic method function\r\n     */\r\n    fullCalendar(method: string, arg1: any, arg2: any, arg3: any): void;\r\n}\r\n\r\ninterface JQueryStatic {\r\n    fullCalendar: FullCalendar.Calendar;\r\n}\r\n"]}